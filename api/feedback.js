const https = require('https' );

// Ù†Ù‡ÛŽÙ†ÛŒÛŒÛ•Ú©Ø§Ù† Ù„Û• Vercel Environment Variables ÙˆÛ•Ø±Ø¯Û•Ú¯ÛŒØ±ÛŽÙ†
const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const CHAT_ID = process.env.TELEGRAM_CHAT_ID;

module.exports = (req, res) => {
    // ØªÛ•Ù†Ù‡Ø§ Ú•ÛŽÚ¯Û• Ø¨Û• POST Ø¨Ø¯Û•
    if (req.method !== 'POST') {
        res.setHeader('Allow', 'POST');
        return res.status(405).json({ error: 'Method Not Allowed' });
    }

    const { message } = req.body;

    if (!message || !message.trim()) {
        return res.status(400).json({ error: 'Ù¾Û•ÛŒØ§Ù… Ø¨Û•ØªØ§ÚµÛ•' });
    }

    const text = `ðŸ”” **Ù¾Û•ÛŒØ§Ù…ÛŽÚ©ÛŒ Ù†ÙˆÛŽ Ù‡Ø§Øª!**\n-------------------------\n${message}`;

    const data = JSON.stringify({
        chat_id: CHAT_ID,
        text: text,
        parse_mode: 'Markdown'
    });

    const options = {
        hostname: 'api.telegram.org',
        port: 443,
        path: `/bot${BOT_TOKEN}/sendMessage`,
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Content-Length': data.length
        }
    };

    const request = https.request(options, (response ) => {
        if (response.statusCode === 200) {
            res.status(200).json({ success: true });
        } else {
            res.status(response.statusCode).json({ error: 'Ù‡Û•ÚµÛ•ÛŒÛ•Ú© Ù„Û• Ù†Ø§Ø±Ø¯Ù†ÛŒ Ù¾Û•ÛŒØ§Ù… Ø¨Û† ØªÛŽÙ„ÛŒÚ¯Ø±Ø§Ù… Ú•ÙˆÙˆÛŒØ¯Ø§' });
        }
    });

    request.on('error', (error) => {
        res.status(500).json({ error: 'Internal Server Error' });
    });

    request.write(data);
    request.end();
};
